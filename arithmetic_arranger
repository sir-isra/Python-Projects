def arithmetic_arranger(problems, show_answers=False):
    
    if len(problems) > 5:
        return 'Error: Too many problems.'
    
    operators = []
    first_operands = []
    second_operands = []
    answers = []
    output = str()
    
    for problem in problems:
        
        parts = problem.split(' ')
        
        if not (parts[1] == '+' or parts[1] == '-'):
            return "Error: Operator must be '+' or '-'."
        
        if not (parts[0].isdigit() and parts[2].isdigit()):
            return 'Error: Numbers must only contain digits.'
        
        if len(parts[0]) > 4 or len(parts[2]) > 4:
            return 'Error: Numbers cannot be more than four digits.'
        
        first_operands.append(parts[0])
        operators.append(parts[1])
        second_operands.append(parts[2])
       
        if show_answers:
            if parts[1] == '+':
                answers.append(str(int(parts[0]) + int(parts[2])))
            else:
                answers.append(str(int(parts[0]) - int(parts[2])))
     
    first_line = second_line = third_line = fourth_line = str()
    
            
        #first_max_spaces = 0
        #if len(second_operands[n]) >= len(first_operands[n]):
        #    first_max_spaces = len(second_operands[n]) - len(first_operands[n])
        #first_line += 2*' ' + first_max_spaces*f' ' + f'{first_operands[n]}' + 4*' ' #va formando la primera linea.
    
        #second_max_spaces = 0
        #if len(first_operands[n]) >= len(second_operands[n]):
        #    second_max_spaces = len(first_operands[n]) - len(second_operands[n])
        #second_line += f'{operators[n]} ' + second_max_spaces*' ' + f'{second_operands[n]}' + 4*' ' #va formando la segunda linea.
    
        #total_spaces = 2 + max(len(first_operands[n]), len(second_operands[n]))
        #third_line += total_spaces*'-' + 4*' ' #va formando la segunda linea.

        #total_spaces = width
        #fourth_max_spaces = total_spaces - len(results[n])
        #fourth_line += fourth_max_spaces*' ' + f'{results[n]}' + 4*' ' #va formando la cuarta linea.
        
        #count += 1
        #if count == 5:
        #    first_line += 2*' ' + first_max_spaces*f' ' + f'{first_operands[n]}' + 4*' '
        #    second_line += f'{operators[n]} ' + second_max_spaces*' ' + f'{second_operands[n]}' + 4*' '
        #    third_line += total_spaces*'-' + 4*' '
        #    fourth_line += fourth_max_spaces*' ' + f'{results[n]}' + 4*' '
            
        #else:
            #last_first_line = 2*' ' + first_max_spaces*f' ' + f'{first_operands[n]}' + 4*' '
            #last_second_line = f'{operators[n]} ' + second_max_spaces*' ' + f'{second_operands[n]}' + 4*' '
            #last_third_line = total_spaces*'-' + 4*' '
            #last_fourth_line = fourth_max_spaces*' ' + f'{results[n]}' + 4*' '
            
    for i in range(len(problems)):
        width = 2 + max(len(first_operands[i]), len(second_operands[i]))
        first_line += first_operands[i].rjust(width) + 4*' '
        second_line += operators[i] + second_operands[i].rjust(width - 1) + 4*' '
        third_line += width*'-' + 4*' '
        if show_answers:
            fourth_line += answers[i].rjust(width) + 4*' '

    output = first_line.rstrip() + "\n" + second_line.rstrip() + "\n" + third_line.rstrip()
    if show_answers:
        output += "\n" + fourth_line.rstrip()

    return output
